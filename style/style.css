/* ===== CSS –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===== */
:root {
  /* –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ - —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ */
  --color-primary: #2c3e50;
  --color-secondary: #34495e;
  --color-accent: #3498db;
  --color-accent-hover: #2980b9;
  --color-background: #ffffff;
  --color-surface: #f8f9fa;
  --color-text-primary: #2c3e50;
  --color-text-secondary: #7f8c8d;
  --color-text-muted: #95a5a6;
  --color-border: #e9ecef;
  --color-success: #27ae60;
  --color-warning: #f39c12;
  --color-error: #e74c3c;

  /* –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã */
  --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --gradient-secondary: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
  --gradient-accent: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
  --gradient-surface: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);

  /* –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ */
  --font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  --font-size-xs: 12px;
  --font-size-sm: 14px;
  --font-size-base: 16px;
  --font-size-lg: 18px;
  --font-size-xl: 20px;
  --font-size-2xl: 24px;
  --font-size-3xl: 28px;
  --font-size-4xl: 32px;

  /* –†–∞–∑–º–µ—Ä—ã –∏ –æ—Ç—Å—Ç—É–ø—ã */
  --space-xs: 5px;
  --space-sm: 10px;
  --space-md: 15px;
  --space-lg: 20px;
  --space-xl: 25px;
  --space-2xl: 30px;
  --space-3xl: 40px;
  --space-4xl: 50px;

  /* –¢–µ–Ω–∏ */
  --shadow-sm: 0 2px 5px rgba(0, 0, 0, 0.1);
  --shadow-md: 0 5px 20px rgba(0, 0, 0, 0.08);
  --shadow-lg: 0 8px 25px rgba(0, 0, 0, 0.15);
  --shadow-accent: 0 4px 15px rgba(79, 172, 254, 0.3);

  /* –°–∫—Ä—É–≥–ª–µ–Ω–∏—è */
  --radius-sm: 4px;
  --radius-md: 8px;
  --radius-lg: 12px;
  --radius-xl: 15px;
  --radius-2xl: 25px;

  /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
  --transition-fast: 0.2s ease;
  --transition-base: 0.3s ease;
  --transition-slow: 0.5s ease;
}

/* ===== –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê ===== */
[data-theme="dark"] {
  --color-primary: #ecf0f1;
  --color-secondary: #bdc3c7;
  --color-accent: #3498db;
  --color-accent-hover: #2980b9;
  --color-background: #1a1a1a;
  --color-surface: #2d2d2d;
  --color-text-primary: #ecf0f1;
  --color-text-secondary: #bdc3c7;
  --color-text-muted: #7f8c8d;
  --color-border: #404040;
  --color-success: #2ecc71;
  --color-warning: #f39c12;
  --color-error: #e74c3c;

  --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --gradient-secondary: linear-gradient(135deg, #34495e 0%, #2c3e50 100%);
  --gradient-surface: linear-gradient(135deg, #2d2d2d 0%, #404040 100%);
}

/* ===== –ë–ê–ó–û–í–´–ï –°–¢–ò–õ–ò ===== */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: var(--font-family);
  line-height: 1.6;
  color: var(--color-text-primary);
  background: var(--gradient-primary);
  min-height: 100vh;
  transition: var(--transition-base);
}

/* ===== –ë–õ–û–ö PAGE-CONTAINER ===== */
.page-container {
  max-width: 1200px;
  margin: 0 auto;
  background: var(--color-background);
  min-height: 100vh;
  box-shadow: var(--shadow-lg);
  transition: var(--transition-base);
}

/* ===== –ë–õ–û–ö HEADER ===== */
.header {
  background: var(--gradient-secondary);
  color: var(--color-background);
  text-align: center;
  padding: var(--space-2xl);
  font-size: var(--font-size-3xl);
  font-weight: 300;
  letter-spacing: 2px;
  transition: var(--transition-base);
}

.header__title {
  font-size: inherit;
  font-weight: inherit;
}

/* ===== –ë–õ–û–ö NAV ===== */
.nav {
  background: var(--color-primary);
  padding: var(--space-lg) 0;
  transition: var(--transition-base);
}

.nav__list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  gap: var(--space-xl);
  flex-wrap: wrap;
}

.nav__item {
  margin: 0;
}

.nav__link {
  color: var(--color-background);
  text-decoration: none;
  padding: var(--space-md) var(--space-xl);
  border-radius: var(--radius-2xl);
  transition: all var(--transition-base);
  font-weight: 500;
  display: block;
  position: relative;
  overflow: hidden;
}

.nav__link::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: var(--color-accent);
  transition: var(--transition-base);
  z-index: -1;
}

.nav__link:hover::before,
.nav__link:focus::before {
  left: 0;
}

.nav__link:hover,
.nav__link:focus {
  transform: translateY(-2px);
  box-shadow: var(--shadow-accent);
}

.nav__link:active {
  transform: translateY(0);
}

/* –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è */
.nav__item--active .nav__link {
  background: var(--color-accent);
  font-weight: bold;
}

/* ===== –ë–õ–û–ö CONTENT ===== */
.content {
  padding: var(--space-3xl);
  max-width: 900px;
  margin: 0 auto;
}

/* ===== –ë–õ–û–ö PROFILE ===== */
.profile {
  text-align: center;
  margin-bottom: var(--space-3xl);
}

.profile__title {
  font-size: var(--font-size-4xl);
  color: var(--color-text-primary);
  margin-bottom: var(--space-sm);
  font-weight: 300;
}

.profile__photo {
  width: 220px;
  height: 280px;
  border-radius: var(--radius-xl);
  object-fit: cover;
  margin: var(--space-lg) auto;
  border: 4px solid var(--color-accent);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  transition: var(--transition-base);
}

.profile__photo:hover {
  transform: scale(1.02);
  box-shadow: 0 12px 30px rgba(102, 126, 234, 0.4);
}

.profile__name {
  font-size: var(--font-size-2xl);
  color: var(--color-text-primary);
  margin: var(--space-sm) 0;
  font-weight: 500;
}

.profile__group {
  font-size: var(--font-size-lg);
  color: var(--color-text-secondary);
  margin: var(--space-xs) 0;
}

/* ===== –ë–õ–û–ö ABOUT ===== */
.about {
  background: var(--gradient-surface);
  padding: var(--space-xl);
  border-radius: var(--radius-xl);
  margin: var(--space-2xl) 0;
  border-left: 5px solid var(--color-accent);
  font-size: var(--font-size-base);
  line-height: 1.8;
  transition: var(--transition-base);
}

.about__title {
  color: var(--color-text-primary);
  margin-bottom: var(--space-lg);
  font-size: var(--font-size-2xl);
  border-bottom: 2px solid var(--color-accent);
  padding-bottom: var(--space-sm);
}

.about__text {
  color: var(--color-text-secondary);
  line-height: 1.7;
  margin: var(--space-md) 0;
}

.about__text--lead {
  font-size: var(--font-size-lg);
  color: var(--color-text-primary);
  font-weight: 400;
}

.about__text--small {
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
}

/* ===== –ë–õ–û–ö SKILLS ===== */
.skills {
  margin: var(--space-2xl) 0;
}

.skills__title {
  color: var(--color-text-primary);
  margin-bottom: var(--space-lg);
  font-size: var(--font-size-2xl);
  text-align: center;
  border-bottom: 2px solid var(--color-accent);
  padding-bottom: var(--space-sm);
}

.skills__list {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: var(--space-lg);
  margin: var(--space-lg) 0;
}

.skill {
  background: var(--gradient-accent);
  color: var(--color-background);
  padding: var(--space-md) var(--space-xl);
  border-radius: var(--radius-2xl);
  font-weight: 600;
  font-size: var(--font-size-sm);
  box-shadow: var(--shadow-accent);
  transition: all var(--transition-base);
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.skill::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: var(--transition-base);
}

.skill:hover::before {
  left: 100%;
}

.skill:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 20px rgba(79, 172, 254, 0.4);
}

.skill:active {
  transform: translateY(-1px);
}

/* –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –Ω–∞–≤—ã–∫–æ–≤ */
.skill--html {
  background: #e34c26;
}

.skill--css {
  background: #264de4;
}

.skill--js {
  background: #f0db4f;
  color: var(--color-text-primary);
}

.skill--vue {
  background: #42b883;
}

.skill--responsive {
  background: #764ba2;
}

/* ===== –ë–õ–û–ö PROJECTS ===== */
.projects {
  margin: var(--space-3xl) 0;
}

.projects__title {
  color: var(--color-text-primary);
  margin-bottom: var(--space-lg);
  font-size: var(--font-size-2xl);
  text-align: center;
  border-bottom: 2px solid var(--color-accent);
  padding-bottom: var(--space-sm);
}

.projects__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--space-lg);
  margin-top: var(--space-lg);
}

/* ===== –ë–õ–û–ö PROJECT-CARD ===== */
.project-card {
  background: var(--color-background);
  padding: var(--space-2xl);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  border-left: 4px solid var(--color-accent);
  transition: all var(--transition-base);
  position: relative;
  overflow: hidden;
}

.project-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--gradient-accent);
  opacity: 0;
  transition: var(--transition-base);
  z-index: 1;
}

.project-card:hover::before {
  opacity: 0.05;
}

.project-card:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
}

.project-card:active {
  transform: translateY(-2px);
}

.project-card__title {
  color: var(--color-text-primary);
  margin-bottom: var(--space-sm);
  font-size: var(--font-size-xl);
  font-weight: 600;
  position: relative;
  z-index: 2;
}

.project-card__desc {
  color: var(--color-text-secondary);
  line-height: 1.5;
  position: relative;
  z-index: 2;
}

/* –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ */
.project-card--featured {
  border-left-color: var(--color-warning);
  background: var(--gradient-surface);
}

.project-card--featured::after {
  content: "üî•";
  position: absolute;
  top: var(--space-md);
  right: var(--space-md);
  font-size: var(--font-size-lg);
  z-index: 2;
}

.project-card--highlight {
  border-left-color: var(--color-success);
  background: linear-gradient(135deg, #fff9c4 0%, var(--color-surface) 100%);
}

/* ===== –ë–õ–û–ö EXPERIENCE ===== */
.experience {
  margin-top: var(--space-4xl);
}

.experience__title {
  font-size: var(--font-size-3xl);
  color: var(--color-text-primary);
  text-align: center;
  margin-bottom: var(--space-2xl);
  font-weight: 300;
}

/* ===== –ë–õ–û–ö CARD ===== */
.card {
  background: var(--color-background);
  padding: var(--space-xl);
  margin: var(--space-lg) 0;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  border-left: 4px solid var(--color-accent);
  transition: all var(--transition-base);
  position: relative;
  overflow: hidden;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(52, 152, 219, 0.1), transparent);
  transition: var(--transition-base);
}

.card:hover::before {
  left: 100%;
}

.card:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-lg);
}

.card:active {
  transform: translateY(-1px);
}

.card__title {
  font-size: var(--font-size-xl);
  color: var(--color-text-primary);
  margin: 0 0 var(--space-md) 0;
  font-weight: 600;
}

.card__desc {
  color: var(--color-text-secondary);
  line-height: 1.6;
  margin: 0;
}

.card__meta {
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
  margin: var(--space-md) 0 0 0;
}

/* –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫–∞—Ä—Ç–æ—á–∫–∏ */
.card--featured {
  border-left-color: var(--color-warning);
  background: var(--gradient-surface);
}

.card--featured::after {
  content: "üî•";
  position: absolute;
  top: var(--space-md);
  right: var(--space-md);
  font-size: var(--font-size-lg);
}

.card--highlight {
  border-left-color: var(--color-success);
  background: linear-gradient(135deg, #fff9c4 0%, var(--color-surface) 100%);
}

.card--contact {
  border-left-color: var(--color-accent);
}

.card--contact:hover {
  transform: translateX(5px);
}

.card--contact:active {
  transform: translateX(2px);
}

/* ===== –ë–õ–û–ö FOOTER ===== */
.footer {
  background: var(--gradient-secondary);
  color: var(--color-background);
  text-align: center;
  padding: var(--space-2xl);
  margin-top: var(--space-4xl);
  transition: var(--transition-base);
}

.footer__text {
  color: inherit;
  margin: 0;
}

/* ===== –ë–õ–û–ö THEME-TOGGLE ===== */
.theme-toggle {
  position: fixed;
  bottom: var(--space-2xl);
  right: var(--space-2xl);
  z-index: 1000;
}

.theme-toggle__button {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: none;
  background: var(--gradient-accent);
  color: var(--color-background);
  cursor: pointer;
  box-shadow: var(--shadow-lg);
  transition: all var(--transition-base);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-lg);
}

.theme-toggle__button:hover {
  transform: scale(1.1) rotate(15deg);
  box-shadow: var(--shadow-lg);
}

.theme-toggle__button:active {
  transform: scale(0.95);
}

/* ===== –ë–õ–û–ö BUTTON ===== */
.button {
  padding: var(--space-md) var(--space-xl);
  border: none;
  border-radius: var(--radius-2xl);
  background: var(--gradient-accent);
  color: var(--color-background);
  font-size: var(--font-size-base);
  cursor: pointer;
  transition: all var(--transition-base);
  font-weight: 600;
  box-shadow: var(--shadow-accent);
  text-decoration: none;
  display: inline-block;
  text-align: center;
  position: relative;
  overflow: hidden;
}

.button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: var(--transition-base);
}

.button:hover::before {
  left: 100%;
}

.button:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 20px rgba(79, 172, 254, 0.4);
}

.button:active {
  transform: translateY(-1px);
}

.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.button:disabled:hover {
  transform: none;
  box-shadow: var(--shadow-accent);
}

/* –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫–Ω–æ–ø–∫–∏ */
.button--back {
  background: var(--gradient-primary);
  margin-bottom: var(--space-2xl);
}

.button--secondary {
  background: var(--gradient-surface);
  color: var(--color-text-primary);
}

.button--small {
  padding: var(--space-sm) var(--space-md);
  font-size: var(--font-size-sm);
}

/* ===== –ë–õ–û–ö CONTROLS ===== */
.controls {
  display: flex;
  gap: var(--space-md);
  margin-bottom: var(--space-2xl);
  justify-content: center;
  flex-wrap: wrap;
}

/* ===== –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨ ===== */
@media (max-width: 768px) {
  :root {
    --space-3xl: 20px;
    --space-4xl: 30px;
  }

  .nav__list {
    flex-direction: column;
    align-items: center;
    gap: var(--space-sm);
  }

  .projects__grid {
    grid-template-columns: 1fr;
  }

  .skills__list {
    justify-content: center;
  }

  .controls {
    flex-direction: column;
    align-items: center;
  }

  .theme-toggle {
    bottom: var(--space-lg);
    right: var(--space-lg);
  }

  .theme-toggle__button {
    width: 45px;
    height: 45px;
  }
}

@media (max-width: 480px) {
  .content {
    padding: var(--space-lg);
  }

  .profile__photo {
    width: 180px;
    height: 230px;
  }

  .card {
    padding: var(--space-lg);
  }
}

/* ===== –£–¢–ò–õ–ò–¢–ê–†–ù–´–ï –ö–õ–ê–°–°–´ ===== */
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.text-center {
  text-align: center;
}

.mb-sm { margin-bottom: var(--space-sm); }
.mb-md { margin-bottom: var(--space-md); }
.mb-lg { margin-bottom: var(--space-lg); }
.mb-xl { margin-bottom: var(--space-xl); }

.mt-sm { margin-top: var(--space-sm); }
.mt-md { margin-top: var(--space-md); }
.mt-lg { margin-top: var(--space-lg); }
.mt-xl { margin-top: var(--space-xl); }
<!DOCTYPE html>
<html lang="ru" data-theme="light">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ö–æ–Ω—Ç–∞–∫—Ç—ã</title>
    <link rel="stylesheet" href="../style/style.css">
    <link rel="icon" href="../images/favicon.ico" type="image/x-icon">
</head>

<body>
    <div class="page-container">
        <header class="header">
            <h1 class="header__title">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h1>
        </header>
        
        <nav class="nav">
            <ul class="nav__list">
                <li class="nav__item"><a class="nav__link" href="../index.html">–ì–ª–∞–≤–Ω–∞—è</a></li>
                <li class="nav__item"><a class="nav__link" href="news.html">–ù–æ–≤–æ—Å—Ç–∏</a></li>
                <li class="nav__item"><a class="nav__link" href="practices.html">–ü—Ä–∞–∫—Ç–∏–∫–∏</a></li>
                <li class="nav__item"><a class="nav__link" href="goods.html">–¢–æ–≤–∞—Ä—ã</a></li>
                <li class="nav__item nav__item--active"><a class="nav__link" href="contacts.html">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
            </ul>
        </nav>
        
        <main class="content">
            <div class="contacts-section">
                <button class="button button--back" type="button" onclick="history.back()">‚Üê –ù–∞–∑–∞–¥</button>

                <h2 class="experience__title">–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h2>
                
                <p class="about__text about__text--lead">–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º. –Ø –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞!</p>

                <article class="card card--contact">
                    <h3 class="card__title">üìû –†–∞–±–æ—á–∏–π –∫–æ–Ω—Ç–∞–∫—Ç</h3>
                    <p class="card__desc">–õ–æ–≥–≤–∏–Ω–æ–≤ –ì–ª–µ–± –î–º–∏—Ç—Ä–∏–µ–≤–∏—á</p>
                    <p class="about__text about__text--lead">+7-928-845-82-84</p>
                    <p class="card__meta">–î–æ—Å—Ç—É–ø–µ–Ω —Å 9:00 –¥–æ 18:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏</p>
                </article>

                <article class="card card--contact card--highlight">
                    <h3 class="card__title">üè† –î–æ–º–∞—à–Ω–∏–π –∫–æ–Ω—Ç–∞–∫—Ç</h3>
                    <p class="card__desc">–õ–æ–≥–≤–∏–Ω–æ–≤ –ì–ª–µ–± –î–º–∏—Ç—Ä–∏–µ–≤–∏—á</p>
                    <p class="about__text about__text--lead">+7-024-442-52-54</p>
                    <p class="card__meta">–î–ª—è —Å—Ä–æ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è</p>
                </article>

                <article class="card card--contact card--featured">
                    <h3 class="card__title">‚úâÔ∏è –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞</h3>
                    <p class="about__text about__text--lead">g.logvinov@example.com</p>
                    <p class="card__desc">–û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–æ—Å–æ–± –¥–ª—è –¥–µ–ª–æ–≤–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏</p>
                </article>
            </div>
        </main>
        
        <footer class="footer">
            <p class="footer__text">¬© 2024 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã</p>
        </footer>

        <!-- –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã -->
        <div class="theme-toggle">
            <button class="theme-toggle__button" id="themeToggle" aria-label="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É">
                üåô
            </button>
        </div>
    </div>

    <script>
        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏
        class ThemeManager {
            constructor() {
                this.themeToggle = document.getElementById('themeToggle');
                this.currentTheme = localStorage.getItem('theme') || 'light';
                this.init();
            }

            init() {
                this.applyTheme(this.currentTheme);
                if (this.themeToggle) {
                    this.themeToggle.addEventListener('click', () => this.toggleTheme());
                }
            }

            applyTheme(theme) {
                document.documentElement.setAttribute('data-theme', theme);
                this.updateToggleButton(theme);
                localStorage.setItem('theme', theme);
            }

            toggleTheme() {
                this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light';
                this.applyTheme(this.currentTheme);
            }

            updateToggleButton(theme) {
                if (this.themeToggle) {
                    this.themeToggle.textContent = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
                }
            }
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', () => {
            new ThemeManager();
        });
    </script>
</body>

</html>